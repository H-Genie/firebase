{"version":3,"sources":["modules/firebase.js","modules/crudComment.js","Components/SetComment.js","Components/Comments.js","modules/useFirestore.js","Components/CommentContainer.js","App.js","index.js"],"names":["firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","dbService","firestore","setComment","e","preventDefault","target","value","alert","id","Date","now","commentObj","comment","nickname","password","date","toLocaleDateString","doc","set","SetComment","onSubmit","type","maxLength","placeholder","style","width","minLength","autoComplete","Comments","comments","useState","setCommets","useEffect","collection","orderBy","onSnapshot","snapshot","data","docs","map","useFirestore","display","alignItems","marginLeft","onClick","checkedPwd","prompt","updatedComment","update","updateComment","window","confirm","delete","deleteComment","CommentContainer","App","ReactDOM","render","document","getElementById"],"mappings":"kJAaAA,IAASC,cAVc,CACnBC,OAAQC,0CACRC,WAAYD,yBACZE,YAAaF,mEACbG,UAAWH,SACXI,cAAeJ,qBACfK,kBAAmBL,gBACnBM,MAAON,6CACPO,cAAeP,iBAIZ,IAAMQ,EAAYX,IAASY,YCbrBC,EAAa,SAACC,GAQvB,GAPAA,EAAEC,iBAGwB,KAAtBD,EAAEE,OAAO,GAAGC,OACU,KAAtBH,EAAEE,OAAO,GAAGC,OACU,KAAtBH,EAAEE,OAAO,GAAGC,MAGZC,MAAM,mFADV,CAKA,IAAMC,EAAKC,KAAKC,MACVC,EAAa,CACfH,GAAIA,EACJI,QAAST,EAAEE,OAAO,GAAGC,MACrBO,SAAUV,EAAEE,OAAO,GAAGC,MACtBQ,SAAUX,EAAEE,OAAO,GAAGC,MACtBS,MAAM,IAAIN,MAAOO,sBAErBhB,EAAUiB,IAAV,iBAAwBT,IAAMU,IAAIP,GAElCR,EAAEE,OAAO,GAAGC,MAAQ,GACpBH,EAAEE,OAAO,GAAGC,MAAQ,GACpBH,EAAEE,OAAO,GAAGC,MAAQ,K,OCGTa,EA5BI,WACf,OACI,mCACI,uBAAMC,SAAUlB,EAAhB,UACI,uBACImB,KAAK,OACLC,UAAU,KACVC,YAAY,uIACZC,MAAO,CAAEC,MAAO,WAEpB,uBACIJ,KAAK,OACLC,UAAU,KACVC,YAAY,+CAEhB,uBACIF,KAAK,WACLK,UAAU,IACVJ,UAAU,KACVK,aAAa,MACbJ,YAAY,0CAEhB,uBAAOF,KAAK,SAASf,MAAM,uB,wBCG5BsB,EAvBE,WACb,IAAMC,ECFkB,WAAO,IAAD,EACCC,mBAAS,IADV,mBACvBD,EADuB,KACbE,EADa,KAY9B,OATAC,qBAAU,WACNhC,EAAUiC,WAAW,UAAUC,QAAQ,KAAM,QAAQC,YAAW,SAAAC,GAC5D,IAAMC,EAAOD,EAASE,KAAKC,KAAI,SAAAtB,GAAG,sBAC3BA,EAAIoB,WAEXN,EAAWM,QAEhB,IAEIR,EDVUW,GAEjB,OACI,mCACKX,EAASU,KAAI,SAAA3B,GAAO,OACjB,sBAAsBY,MAAO,CAAEiB,QAAS,OAAQC,WAAY,UAA5D,UACI,sCACO9B,EAAQA,QADf,KAC0BA,EAAQC,SADlC,KAC8CD,EAAQG,QAEtD,cAAC,IAAD,CACIS,MAAO,CAAEmB,WAAY,QACrBC,QAAS,kBFcJ,SAACpC,EAAIM,EAAUF,GACxC,IAAMiC,EAAaC,OAAO,uEAC1B,GAAID,IAAe/B,EAAU,CACzB,IAAMiC,EAAiBD,OAAO,gEAAelC,GACzCmC,GAAgB/C,EAAUiB,IAAV,iBAAwBT,IAAMwC,OAAO,CAAEpC,QAASmC,QACjE,IAAmB,OAAfF,EACP,OAEAtC,MAAM,wEEtByB0C,CAAcrC,EAAQJ,GAAII,EAAQE,SAAUF,EAAQA,YAEvE,cAAC,IAAD,CACIgC,QAAS,kBFuBJ,SAACpC,EAAIM,GAC9B,IAAM+B,EAAaC,OAAO,uEAC1B,GAAID,IAAe/B,EACJoC,OAAOC,QAAQ,6DAClBnD,EAAUiB,IAAV,iBAAwBT,IAAM4C,aACnC,IAAmB,OAAfP,EACP,OAEAtC,MAAM,wEE/ByB8C,CAAczC,EAAQJ,GAAII,EAAQE,eAT/CF,EAAQJ,UEEnB8C,EATU,WACrB,OACI,qCACI,cAAC,EAAD,IACA,cAAC,EAAD,QCDGC,EAJH,WACR,OAAO,cAAC,EAAD,KCCXC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2c3c7833.chunk.js","sourcesContent":["import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN,\n    databaseURL: process.env.REACT_APP_DATABASE_URL,\n    projectId: process.env.REACT_APP_PROJECT_ID,\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n    messagingSenderId: process.env.REACT_APP_MESSAGIB_ID,\n    appId: process.env.REACT_APP_APP_ID,\n    measurementId: process.env.REACT_APP_MEASUREMENT_ID\n};\nfirebase.initializeApp(firebaseConfig);\n\nexport const dbService = firebase.firestore();","import { dbService } from './firebase';\r\n\r\nexport const setComment = (e) => {\r\n    e.preventDefault();\r\n\r\n    const checkEmpty =\r\n        e.target[0].value === \"\" ||\r\n        e.target[1].value === \"\" ||\r\n        e.target[2].value === \"\";\r\n\r\n    if (checkEmpty) {\r\n        alert(\"모든 정보를 다 입력해주세요\");\r\n        return;\r\n    }\r\n\r\n    const id = Date.now();\r\n    const commentObj = {\r\n        id: id,\r\n        comment: e.target[0].value,\r\n        nickname: e.target[1].value,\r\n        password: e.target[2].value,\r\n        date: new Date().toLocaleDateString()\r\n    }\r\n    dbService.doc(`cyland/${id}`).set(commentObj);\r\n\r\n    e.target[0].value = \"\";\r\n    e.target[1].value = \"\";\r\n    e.target[2].value = \"\";\r\n}\r\n\r\nexport const updateComment = (id, password, comment) => {\r\n    const checkedPwd = prompt(\"비밀번호를 입력해주세요\");\r\n    if (checkedPwd === password) {\r\n        const updatedComment = prompt(\"메시지를 수정해주세요\", comment);\r\n        if (updatedComment) dbService.doc(`cyland/${id}`).update({ comment: updatedComment });\r\n    } else if (checkedPwd === null) {\r\n        return;\r\n    } else {\r\n        alert(\"비밀번호를 확인해주세요\");\r\n    }\r\n}\r\n\r\nexport const deleteComment = (id, password) => {\r\n    const checkedPwd = prompt(\"비밀번호를 입력해주세요\");\r\n    if (checkedPwd === password) {\r\n        const ok = window.confirm(\"메시지를 삭제할까요?\");\r\n        if (ok) dbService.doc(`cyland/${id}`).delete();\r\n    } else if (checkedPwd === null) {\r\n        return;\r\n    } else {\r\n        alert(\"비밀번호를 확인해주세요\");\r\n    }\r\n}","import { setComment } from '../modules/crudComment';\n\nconst SetComment = () => {\n    return (\n        <>\n            <form onSubmit={setComment}>\n                <input\n                    type=\"text\"\n                    maxLength=\"25\"\n                    placeholder=\"일촌과 나누고 싶은 이야기를 남겨보세요~! (최대 25자)\"\n                    style={{ width: \"340px\" }}\n                />\n                <input\n                    type=\"text\"\n                    maxLength=\"16\"\n                    placeholder=\"일촌명 (최대 16자)\"\n                />\n                <input\n                    type=\"password\"\n                    minLength=\"4\"\n                    maxLength=\"12\"\n                    autoComplete=\"off\"\n                    placeholder=\"비밀번호 (4~12자)\"\n                />\n                <input type=\"submit\" value=\"작성\" />\n            </form>\n        </>\n    )\n}\n\nexport default SetComment;","import { AiOutlineEdit, AiOutlineDelete } from 'react-icons/ai';\nimport { useFirestore } from '../modules/useFirestore';\nimport { updateComment, deleteComment } from '../modules/crudComment';\n\nconst Comments = () => {\n    const comments = useFirestore()\n\n    return (\n        <>\n            {comments.map(comment =>\n                <div key={comment.id} style={{ display: 'flex', alignItems: 'center' }}>\n                    <p>\n                        · {comment.comment} ({comment.nickname}) {comment.date}\n                    </p>\n                    <AiOutlineEdit\n                        style={{ marginLeft: \"10px\" }}\n                        onClick={() => updateComment(comment.id, comment.password, comment.comment)}\n                    />\n                    <AiOutlineDelete\n                        onClick={() => deleteComment(comment.id, comment.password)}\n                    />\n                </div>\n            )}\n        </>\n    )\n}\n\nexport default Comments;","import { useState, useEffect } from 'react';\nimport { dbService } from './firebase';\n\nexport const useFirestore = () => {\n    const [comments, setCommets] = useState([]);\n\n    useEffect(() => {\n        dbService.collection(\"cyland\").orderBy(\"id\", \"desc\").onSnapshot(snapshot => {\n            const data = snapshot.docs.map(doc => ({\n                ...doc.data()\n            }));\n            setCommets(data);\n        });\n    }, []);\n\n    return comments;\n}","import SetComment from './SetComment';\nimport Comments from './Comments';\n\nconst CommentContainer = () => {\n    return (\n        <>\n            <SetComment />\n            <Comments />\n        </>\n    )\n}\n\nexport default CommentContainer;","import CommentContainer from './Components/CommentContainer';\n\nconst App = () => {\n    return <CommentContainer />\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}